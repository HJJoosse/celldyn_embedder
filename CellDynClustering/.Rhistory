q()
library(datasets)
head(iris)
summary(head)
plot(iris)
summary(iris)
plot()
info(iris)
help(iris)
help(plot)
help(pca)
help(??pca)
help(PCA)
help(datasets)
Reference --> Packages
Reference -> Packages
Packages
Reference
tibble::tibble(
Package = names(installed.packages()[,3]),
Version = unname(installed.packages()[,3])
)
library(tibble)
head(iris)
library(tibble)
help(data.frame)
type(iris)
class(iris)
iris[0]
iris[1]
iris[1][1]
iris[1][1]
iris.shape
iris
iris['Sepal.Length']
iris['Sepal.Length'][1]
iris['Sepal.Length'][1][1]
iris$colnam
iris$Sepal.Length
iris$Sepal.Length[1]
fahrenheit_to_celsius <- function(temp_F) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
fahrenheit_to_celsius(32)
print(count)
x <- c(2,5,3,9,8,11,6)
count <- 0
for (val in x) {
if(val %% 2 == 0)  count = count+1
}
print(count)
source('~/.active-rstudio-document', echo=TRUE)
plot(data)
source('~/.active-rstudio-document', echo=TRUE)
prin(val)
for(val in iris$Sepal.Length){
prin(val)
}
for(val in iris$Sepal.Length){
print(val)
}
help(boxplot)
help(scatter)
mean(iris[,1])
age   <- c(25, 30, 22, 40, 33, 24)
sex   <- c("M", "F", "M", "F", "U", "U")
males <- sex == "M"
sex[age < 25]
c
sum(sex)
sum()
sum(sex != "F")
sex
sum(sex != “F” & sex != “U”  )
sum(sex != "F" & sex != "U")
sum(males)
ggplot()
install.packages("igraph")
library(igraph)
library(igraph)
sample_gnp
sample_gnp(1,30)
sample_gnp(1,1.30)
sample_gnp(1,1/30)
results
result <- sample_gnp(1,1/30)
result
for (x in 20:500){
result <- sample_gnp(x, 1/30)
results <- result
}
results
for (x in 20:500){
result <- sample_gnp(x, 1/30)
results <- result
}
#results
result
results
typeof(results)
degree_distribution(results)
degree_distribution(result)
results <- list()
for (x in 20:500){
result <- sample_gnp(x, 1/30)
results <- result
}
results
results <- list()
for (x in 20:500){
result <- sample_gnp(x, 1/30)
results <-append(result)
}
results <- list()
for (x in 20:500){
result <- sample_gnp(x, 1/30)
results <- list(results, list(result))
}
#results
results
results[i]
results[1]
results[[0]]
results[[1]]
results[[1]][1]
# results <- list(results, list(result))
count <- count +1
results <- list()
for (x in 20:500){
result <- sample_gnp(x, 1/30)
# results <- list(results, list(result))
count <- count +1
}
count <- 1
for (x in 20:500){
result <- sample_gnp(x, 1/30)
# results <- list(results, list(result))
count <- count +1
}
results <- list()
count <- 1
for (x in 20:500){
result <- sample_gnp(x, 1/30)
results[[count]] <- result
count <- count +1
}
#resu
results
results[[1]]
diameter(results[[1]])
diameter(results[[2]])
diameter(results[[4]])
results[[4]]
diameter(results[[300]])
seq(20,500)
resutls$x <- dataframe(seq(20, 1, 500))
resutls$x <- data.frame(seq(20, 1, 500))
results <- data.frame(x=seq(20, 1, 500))
#seq(20,500)
seq(20, 1, 500)
#seq(20,500)
seq(20, 500)
results <- data.frame(x=seq(20, 500))
dia <- c()
for (x in 20:500){
result <- sample_gnp(x, 0.001)
dia <- c(dia,diameter(result))
}
dia
dia[1]
size(dia)
sizeof(dia)
length(dia)
#seq(20,500)
length(seq(20, 500))
seq(20, 500)
results <- data.frame(x=seq(20, 500))
reasults$diam <- dia
results$diam <- dia
results
plot(results$x, results$diam)
log(diam)
log(dia)
plot(results$x, log(results$diam))
plot(log(results$x), log(results$diam))
plot(results$x, log(results$diam))
results$logdia = log(results$diam)
ggplot(data = results) + geom_histogram(mapping = aes(x = logdialogdia), bins = 20)
ggplot()
library(tidyverse)
ggplot(results, aes(x=x, y=logdia))
ggplot(data = results) + geom_point(aes(x=x, y=logdia))
ggplot(data = results) + geom_point(aes(x=x, y=logdia, xlab = "Node", ylab = "Log(diameter)"))
ggplot(data = results) + geom_point(aes(x=x, y=logdia, xLab = "Node", yLab = "Log(diameter)"))
ggplot(data = results) + geom_point(aes(x=x, y=logdia) + xlab("Node") + yLab("Log(diameter)
ggplot(data = results) + geom_point(aes(x=x, y=logdia) + xlab("Node") + yLab("Log(diameter")
ggplot(data = results) + geom_point(aes(x=x, y=logdia) + xlab("Node") + yLab("Log(diameter)")
ggplot(data = results) + geom_point(aes(x=x, y=logdia) + xlab("Node") + yLab("Log_diameter")
ggplot(data = results) + geom_point(aes(x=x, y=logdia) + xlab("Node") + ylab("Log_diameter")
ggplot(data = results) + geom_point(aes(x=x, y=logdia)) + xlab("Node") + ylab("Log_diameter")
ggplot(data = results) + geom_point(aes(x=x, y=logdia)) + xlab("Node") + ylab("Log_diameter")
ggplot(data = results) + geom_point(aes(x=x, y=logdia)) + xlab("Node") + ylab("Log(diamete)r")
ggplot(data = results) + geom_point(aes(x=x, y=logdia)) + xlab("Node") + ylab("Log(diameter)")
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
q()
A <- tibble(
key=c("A", "B", "C", "D"),
a_value=c(678, 3453, 543, 565)
)
B <- tibble(
key=c("A", "D", "E", "F", "G"),
b_value=c(234, 6765, 765, 989, 457)
)
A %>% full_join(B)
library(tidyverse)
A <- tibble(
key=c("A", "B", "C", "D"),
a_value=c(678, 3453, 543, 565)
)
B <- tibble(
key=c("A", "D", "E", "F", "G"),
b_value=c(234, 6765, 765, 989, 457)
)
A %>% full_join(B)
library(tidyverse)
A <- tibble(
key=c("A", "B", "C", "D"),
a_value=c(678, 453, 543, 565)
)
B <- tibble(
key=c("A", "D", "E", "F", "G"),
b_value=c(234, 765, 765, 989, 457)
)
A %>% full_join(B)
library(tidyverse)
A <- tibble(
key=c("A", "B", "C", "D"),
a_value=c(678, 453, 543, 565)
)
B <- tibble(
key=c("A", "D", "E", "F", "G"),
b_value=c(234, 765, 765, 989, 457)
)
A %>% full_join(B)
A %>% outer_join(B)
A %>% right_join(B)
A %>% semi_join(B)
A %>% anti_join(B)
B %>% anti_join(A)
A %>% anti_join(B)
B %>% anti_join(A)
c.	anti_join(A,B)
anti_join(A,B)
B %>% semi_join(A)
semi_join(B,A)
semi_join(A,A)
semi_join(A,B)
B %>% anti_join(A)
patients <- tibble(
id=c("1234", "2341", "4321"),
age=c(70, 85, 75)
)
measurements <- tibble(
id=c("1234", "4321", "1234", "4321", "1234", "4321"),
run=c("DIA", "DIA", "SYS", "SYS", "HR", "HR"),
reaction=c(76, 94, 106, 138, 103, 76, 75)
)
measurements <- tibble(
id=c("1234", "4321", "1234", "4321", "1234", "4321"),
run=c("DIA", "DIA", "SYS", "SYS", "HR", "HR"),
reaction=c(76, 94, 138, 103, 76, 75)
)
patients %>% left_join(measurements %>% spread(Key, Value))
measurements <- tibble(
id=c("1234", "4321", "1234", "4321", "1234", "4321"),
Key=c("DIA", "DIA", "SYS", "SYS", "HR", "HR"),
Value=c(76, 94, 138, 103, 76, 75)
)
patients %>% left_join(measurements %>% spread(Key, Value))
B %>% anti_join(A)
library(tidyverse)
library(nycflights13) # You need to install this package if you haven't already installed
library(lubridate)
library(rvest) # You need to install this package if you haven't already installed
library('datarium')
flights_mod <- flights %>%
mutate(air_time_seconds = air_time*60) %>%
select(year, month, day, flight, air_time, air_time_seconds)
flights_mod
flights_mod <- flights_mod %>%
group_by(flight) %>%
summarise(mean = mean(air_time, na.rm=T), count = n())
flights_mod
doctor <- tibble(
dcode   = c("d1", "d2"),
dname    = c("Alice", "Bob")
)
patient <- tibble(
pid = c("p1", "p2", "p3", "p4"),
pname = c("Carol", "Denise", "Ethan", "Farah")
)
diagnosis <- tibble(
pid = c("p1", "p2", "p3", "p4"),
dcode = c("d4", "d1", "d2", "d2"),
illness = c("Jaundice", "Peptic ulcer", "Conjunctivitis", "Tonsillitis")
)
patient %>%
inner_join(diagnosis, by = "pid") %>%
right_join(doctor, by = "dcode")
doctor %>%
right_join(diagnosis, by = "dcode")
patient %>%
inner_join(diagnosis, by = "pid") %>%
left_join(doctor, by = "dcode")
patient %>% right_join(diagnosis) %>%
anti_join(doctor)
patient %>% right_join(diagnosis) %>%
semi_join(doctor)
diagnosis %>%
mutate(income = c(185, 290, 689, 235)) %>%
left_join(doctor, by = "dcode") %>%
group_by(dcode, dname) %>%
summarise(income = sum(income))
stocks_mod_2 <- stocks_mod %>%
pivot_longer(c("2015", "2016"), names_to = "year", values_to = "return") %>%
filter(is.na(return) == FALSE) %>%
arrange(year)
stocks_mod_2 <- stocks_mod %>%
pivot_longer(c("2015", "2016"), names_to = "year", values_to = "return") %>%
filter(is.na(return) == FALSE) %>%
arrange(year)
A <- c(10, 2, 9, 3, 8, 4, 7, 5, 6)
A <- c(A, c(14, 19, 23, 25, 99) )
A[TRUE, FALSE]
A[c(TRUE, FALSE)]
A
A[c(FALSE, TRUE)]
where(A[c[FALSE, TRUE]])
where(A==99)
A == 99
A == 99
where(A == 99)
where?
?where
Where
age   <- c(25, 30, 22, 40, 33, 24)
sex   <- c("M", "F", "M", "F", "U")
c(mean(age[sex == "M"]), mean(age[sex == "F"]) , mean(age[sex == "U"]))
sex   <- c("M", "F", "M", "F", "U", "U")
c(mean(age[sex == "M"]), mean(age[sex == "F"]) , mean(age[sex == "U"]))
#sex   <- c("M", "F", "M", "F", "U", "U")
#sex   <- c("M", "F")
c(mean(age[sex == "M"]), mean(age[sex == "F"]) , mean(age[sex == "U"]))
#sex   <- c("M", "F", "M", "F", "U", "U")
sex   <- c("M", "F")
#c(mean(age[sex == "M"]), mean(age[sex == "F"]) , mean(age[sex == "U"]))
c(mean(age[sex == "M"]), mean(age[sex == "F"]) )
age[sex == "M"]
sex   <- c("M", "F", "M", "F", "U")
age[sex == "M"]
age   <- c(25, 30, 22, 40, 33, 24)
sex   <- c("M", "F", "M", "F", "U")
c(mean(age[sex == "M"]), mean(age[sex == "F"]) )
setwd("T:/laupodteam/AIOS/Chontira/CellDynClustering")
library(tidyverse)
library(feather)
library(arrow)
scores_full <- read_csv("models/cell_dyn_hdbscan_hyper_op_results_20000.csv")
scores_full
scores_full <- read_csv("models/cell_dyn_hdbscan_hyper_op_results_20000.csv")
scores_full
colnames(scores_full)
setwd("T:/laupodteam/AIOS/Chontira/CellDynClustering")
scores_full <- read_csv("models/cell_dyn_hdbscan_hyper_op_results_20000.csv")
colnames(scores_full)
